// test operation of FILELINE command
if FILELINE != "File:unit_test.tt, Line:2" {
    println("Failed FILELINE test, " + FILELINE);
}


// default initialization test for basic types
{
	i32 i; f32 f; bool b; string s;// enum e;
	if 0     != i { println("Test Failed, " + FILELINE); }
	if 0.0   != f { println("Test Failed, " + FILELINE); }
	if false != b { println("Test Failed, " + FILELINE); }
	if ""    != s { println("Test Failed, " + FILELINE); }
	//if ""    != e as string { println("Test Failed, " + FILELINE); }
}


// assignment test for basic types
{
	i32 i = 1; f32 f = 2.2; bool b = true; string s = "test";// enum e = :TEST;
	// lhs test
	if 1       != i { println("Test Failed, " + FILELINE); }
	if 2.2     != f { println("Test Failed, " + FILELINE); }
	if true    != b { println("Test Failed, " + FILELINE); }
	if "test"  != s { println("Test Failed, " + FILELINE); }
	//if ":TEST" != e as string { println("Test Failed, " + FILELINE); }
	
	// rhs test
	if i != 1      { println("Test Failed, " + FILELINE); }
	if f != 2.2    { println("Test Failed, " + FILELINE); }
	if b != true   { println("Test Failed, " + FILELINE); }
	if s != "test" { println("Test Failed, " + FILELINE); }
	//if e as string != ":TEST" { println("Test Failed, " + FILELINE); }

	// float to int automatic cast
	i32 c = 0.3;
	if c == 0.3 { println("Test Failed, " + FILELINE); }
	
	// redefinition test
	i32 aa = 5;
	if 5 != aa { println("Test Failed, " + FILELINE); }
	f32 aa = 6.7;
	if 6.7 != aa { println("Test Failed, " + FILELINE); }
}


// test conditional options
{
	i32 a = 1;
	i32 b = 2;
	i32 c = 3;
	if a < b {
		if c > b {
			if b != b {
				println("Test Failed, " + FILELINE);
			}
			else {
				if b < b {
					println("Test Failed, " + FILELINE);
				}
				else if b == b {
					if c >= c {
						// no op, all tests pass
					}
					else {
						println("Test Failed, " + FILELINE);
					}
				}
				else {
					println("Test Failed, " + FILELINE);
				}
			}
		}
		else {
			println("Test Failed, " + FILELINE);
		}
	}
	else {
		println("Test Failed, " + FILELINE);
	}
}


// logical operation tests
{
	i32 a = 1;
	i32 b = 2;
	i32 c = 3;
	if a < b && b < c {} else { println("Test Failed, " + FILELINE); }
	if a > b || b < c {} else { println("Test Failed, " + FILELINE); }
	if !(1 == 1) { println("Test Failed, " + FILELINE); }
}


// test for loop
{
	i32 i;
	for x in 0..5 {
		i = i + 1;
	}
	if 5 != i { println("Test Failed, " + FILELINE); }
}

// test while loop
{
	bool b = true;
	i32 i = 0;
	while (b) {
		i = i + 1;
		if i > 10 {
			b = false;
		}
	}
	if 11 != i { println("Test Failed, " + FILELINE); }
}

// random number generation
{
	f32 r = 0.0;
	if r == rand() { println("Test Failed, " + FILELINE); }
}

// string conversion
{
	i32 a = 1;
	f32 b = 12.3;
	if a as string != "1" { println("Test Failed, " + FILELINE); }
	if b as string != "12.300000" { println("Test Failed, " + FILELINE); }
	
	string s = "s" + a as string + b as string + "t";
	if s != "s112.300000t" { println("Test Failed, " + FILELINE); }
}

//
println("Test Complete");