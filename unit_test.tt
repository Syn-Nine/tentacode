CLEARENV
// test operation of FILELINE command
if FILELINE != "File:unit_test.tt, Line:3" {
    println("Failed FILELINE test, " + FILELINE);
}


CLEARENV
// default initialization test for basic types
i32 i; f32 f; bool b; string s; enum e;
if 0     != i { println("Test Failed, " + FILELINE); }
if 0.0   != f { println("Test Failed, " + FILELINE); }
if false != b { println("Test Failed, " + FILELINE); }
if ""    != s { println("Test Failed, " + FILELINE); }
if ""    != e as string { println("Test Failed, " + FILELINE); }


CLEARENV
// assignment test for basic types
i32 i = 1; f32 f = 2.2; bool b = true; string s = "test"; enum e = :TEST;
if 1       != i { println("Test Failed, " + FILELINE); }
if 2.2     != f { println("Test Failed, " + FILELINE); }
if true    != b { println("Test Failed, " + FILELINE); }
if "test"  != s { println("Test Failed, " + FILELINE); }
if ":TEST" != e as string { println("Test Failed, " + FILELINE); }






CLEARENV
// test for loop
i32 i;
for x in 0..5 {
    i = i + 1;
}
if 5 != i { println("Test Failed, " + FILELINE); }


CLEARENV
// test vec init
vec<i32> ivec;
if len(ivec) != 0 { println("Test Failed, " + FILELINE); }
ivec = [1];
if len(ivec) != 1 { println("Test Failed, " + FILELINE); }
if ivec[0] != 1 { println("Test Failed, " + FILELINE); }
ivec = vec::append(ivec, 3);
if len(ivec) != 2 { println("Test Failed, " + FILELINE); }
if ivec[1] != 3 { println("Test Failed, " + FILELINE); }
ivec = [1, 2, 3];
if len(ivec) != 3 { println("Test Failed, " + FILELINE); }
if ivec[0] != 1 || ivec[1] != 2 || ivec[2] != 3 { println("Test Failed, " + FILELINE); }
